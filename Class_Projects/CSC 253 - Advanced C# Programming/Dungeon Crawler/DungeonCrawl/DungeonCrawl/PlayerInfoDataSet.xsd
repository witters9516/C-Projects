<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PlayerInfoDataSet" targetNamespace="http://tempuri.org/PlayerInfoDataSet.xsd" xmlns:mstns="http://tempuri.org/PlayerInfoDataSet.xsd" xmlns="http://tempuri.org/PlayerInfoDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PlayerSaveInformationConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PlayerSaveInformationConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DungeonCrawl.Properties.Settings.GlobalReference.Default.PlayerSaveInformationConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlayerInformationTableAdapter" GeneratorDataComponentClassName="PlayerInformationTableAdapter" Name="PlayerInformation" UserDataComponentName="PlayerInformationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerInformation" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PlayerInformation] WHERE (([PlayerName] = @Original_PlayerName) AND ([BattlerPassword] = @Original_BattlerPassword) AND ([BattlerMaxHP] = @Original_BattlerMaxHP) AND ([BattlerCurrentHP] = @Original_BattlerCurrentHP))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PlayerName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PlayerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BattlerPassword" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BattlerPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BattlerMaxHP" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BattlerMaxHP" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BattlerCurrentHP" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BattlerCurrentHP" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PlayerInformation] ([PlayerName], [BattlerPassword], [BattlerMaxHP], [BattlerCurrentHP]) VALUES (@PlayerName, @BattlerPassword, @BattlerMaxHP, @BattlerCurrentHP);
SELECT PlayerName, BattlerPassword, BattlerMaxHP, BattlerCurrentHP FROM PlayerInformation WHERE (PlayerName = @PlayerName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PlayerName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PlayerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BattlerPassword" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BattlerPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BattlerMaxHP" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BattlerMaxHP" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BattlerCurrentHP" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BattlerCurrentHP" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PlayerName, BattlerPassword, BattlerMaxHP, BattlerCurrentHP FROM dbo.PlayerInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText />
                    <Parameters />
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PlayerName" DataSetColumn="PlayerName" />
              <Mapping SourceColumn="BattlerPassword" DataSetColumn="BattlerPassword" />
              <Mapping SourceColumn="BattlerMaxHP" DataSetColumn="BattlerMaxHP" />
              <Mapping SourceColumn="BattlerCurrentHP" DataSetColumn="BattlerCurrentHP" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteAllTableData" Modifier="Public" Name="DeleteAllTableData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteAllTableData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM PlayerInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerInformation" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnPlayerCurrentHP" Modifier="Public" Name="ReturnPlayerCurrentHP" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ReturnPlayerCurrentHP">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        BattlerCurrentHP AS Expr1
FROM            PlayerInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerInformation" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnPlayerMaxHP" Modifier="Public" Name="ReturnPlayerMaxHP" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="ReturnPlayerMaxHP">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        BattlerMaxHP AS Expr1
FROM            PlayerInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerInformation" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnPlayerName" Modifier="Public" Name="ReturnPlayerName" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="ReturnPlayerName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        PlayerName AS pName
FROM            PlayerInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerInformation" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnPlayerPassword" Modifier="Public" Name="ReturnPlayerPassword" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="ReturnPlayerPassword">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        BattlerPassword AS Expr1
FROM            PlayerInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SavePlayerInformation" Modifier="Public" Name="SavePlayerInformation" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="SavePlayerInformation">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO PlayerInformation
                         (PlayerName, BattlerPassword, BattlerMaxHP, BattlerCurrentHP)
VALUES        (@PlayerName,@BattlerPassword,@BattlerMaxHP,@BattlerCurrentHP);  
SELECT PlayerName, BattlerPassword, BattlerMaxHP, BattlerCurrentHP FROM PlayerInformation WHERE (PlayerName = @PlayerName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="PlayerName" ColumnName="PlayerName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@PlayerName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="PlayerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BattlerPassword" ColumnName="BattlerPassword" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@BattlerPassword" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="BattlerPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BattlerMaxHP" ColumnName="BattlerMaxHP" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BattlerMaxHP" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="BattlerMaxHP" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BattlerCurrentHP" ColumnName="BattlerCurrentHP" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BattlerCurrentHP" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="BattlerCurrentHP" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO PlayerInformation
                         (PlayerName, BattlerPassword, BattlerMaxHP, BattlerCurrentHP)
VALUES        (@PlayerName,@BattlerPassword,@BattlerMaxHP,@BattlerCurrentHP);    
SELECT PlayerName, BattlerPassword, BattlerMaxHP, BattlerCurrentHP FROM PlayerInformation WHERE (PlayerName = @PlayerName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="PlayerName" ColumnName="PlayerName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@PlayerName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="PlayerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BattlerPassword" ColumnName="BattlerPassword" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@BattlerPassword" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="BattlerPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BattlerMaxHP" ColumnName="BattlerMaxHP" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BattlerMaxHP" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="BattlerMaxHP" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BattlerCurrentHP" ColumnName="BattlerCurrentHP" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BattlerCurrentHP" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="BattlerCurrentHP" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateNewData" Modifier="Public" Name="UpdateNewData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy6" UserSourceName="UpdateNewData">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       PlayerInformation
SET                BattlerCurrentHP = @BattlerCurrentHP
WHERE        (PlayerName = @Original_PlayerName); 
SELECT PlayerName, BattlerPassword, BattlerMaxHP, BattlerCurrentHP FROM PlayerInformation WHERE (PlayerName = @PlayerName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="BattlerCurrentHP" ColumnName="BattlerCurrentHP" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BattlerCurrentHP" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="BattlerCurrentHP" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_PlayerName" ColumnName="PlayerName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Original_PlayerName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="PlayerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PlayerName" ColumnName="PlayerName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerInformation" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@PlayerName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="PlayerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlayerWeaponInformationTableAdapter" GeneratorDataComponentClassName="PlayerWeaponInformationTableAdapter" Name="PlayerWeaponInformation" UserDataComponentName="PlayerWeaponInformationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerWeaponInformation" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PlayerWeaponInformation] WHERE (([WeaponName] = @Original_WeaponName) AND ([WeaponDamage] = @Original_WeaponDamage) AND ([WeaponDescription] = @Original_WeaponDescription))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WeaponName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WeaponName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WeaponDamage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WeaponDamage" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WeaponDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WeaponDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PlayerWeaponInformation] ([WeaponName], [WeaponDamage], [WeaponDescription]) VALUES (@WeaponName, @WeaponDamage, @WeaponDescription);
SELECT WeaponName, WeaponDamage, WeaponDescription FROM PlayerWeaponInformation WHERE (WeaponName = @WeaponName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WeaponName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WeaponName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WeaponDamage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WeaponDamage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WeaponDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WeaponDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT WeaponName, WeaponDamage, WeaponDescription FROM dbo.PlayerWeaponInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PlayerWeaponInformation] SET [WeaponName] = @WeaponName, [WeaponDamage] = @WeaponDamage, [WeaponDescription] = @WeaponDescription WHERE (([WeaponName] = @Original_WeaponName) AND ([WeaponDamage] = @Original_WeaponDamage) AND ([WeaponDescription] = @Original_WeaponDescription));
SELECT WeaponName, WeaponDamage, WeaponDescription FROM PlayerWeaponInformation WHERE (WeaponName = @WeaponName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WeaponName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WeaponName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WeaponDamage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WeaponDamage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@WeaponDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WeaponDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WeaponName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WeaponName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WeaponDamage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WeaponDamage" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_WeaponDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="WeaponDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="WeaponName" DataSetColumn="WeaponName" />
              <Mapping SourceColumn="WeaponDamage" DataSetColumn="WeaponDamage" />
              <Mapping SourceColumn="WeaponDescription" DataSetColumn="WeaponDescription" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteAllTableData" Modifier="Public" Name="DeleteAllTableData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteAllTableData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM PlayerWeaponInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerWeaponInformation" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnWeaponName" Modifier="Public" Name="ReturnWeaponName" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ReturnWeaponName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        WeaponName AS Expr1
FROM            PlayerWeaponInformation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SavePlayerWeaponInformation" Modifier="Public" Name="SavePlayerWeaponInformation" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="SavePlayerWeaponInformation">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[PlayerWeaponInformation] ([WeaponName], [WeaponDamage], [WeaponDescription]) VALUES (@WeaponName, @WeaponDamage, @WeaponDescription);
SELECT WeaponName, WeaponDamage, WeaponDescription FROM PlayerWeaponInformation WHERE (WeaponName = @WeaponName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="WeaponName" ColumnName="WeaponName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerWeaponInformation" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@WeaponName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="WeaponName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="WeaponDamage" ColumnName="WeaponDamage" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerWeaponInformation" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@WeaponDamage" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="WeaponDamage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="WeaponDescription" ColumnName="WeaponDescription" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerWeaponInformation" DataTypeServer="nvarchar(255)" DbType="String" Direction="Input" ParameterName="@WeaponDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="255" SourceColumn="WeaponDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateWeapon" Modifier="Public" Name="UpdateWeapon" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="UpdateWeapon">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       PlayerWeaponInformation
SET                WeaponName = @WeaponName, WeaponDamage = @WeaponDamage, WeaponDescription = @WeaponDescription
WHERE        (WeaponName = @Original_WeaponName);  
SELECT WeaponName, WeaponDamage, WeaponDescription FROM PlayerWeaponInformation WHERE (WeaponName = @WeaponName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="WeaponName" ColumnName="WeaponName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerWeaponInformation" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@WeaponName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="WeaponName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="WeaponDamage" ColumnName="WeaponDamage" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerWeaponInformation" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@WeaponDamage" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="WeaponDamage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="WeaponDescription" ColumnName="WeaponDescription" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerWeaponInformation" DataTypeServer="nvarchar(255)" DbType="String" Direction="Input" ParameterName="@WeaponDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="255" SourceColumn="WeaponDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_WeaponName" ColumnName="WeaponName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerWeaponInformation" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Original_WeaponName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="WeaponName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlayerItemsListInfoTableAdapter" GeneratorDataComponentClassName="PlayerItemsListInfoTableAdapter" Name="PlayerItemsListInfo" UserDataComponentName="PlayerItemsListInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerItemsListInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PlayerItemsListInfo] WHERE (([ItemName] = @Original_ItemName) AND ([ItemDescription] = @Original_ItemDescription) AND ([HealValue] = @Original_HealValue) AND ([Quantity] = @Original_Quantity))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ItemName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ItemName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ItemDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ItemDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_HealValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HealValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PlayerItemsListInfo] ([ItemName], [ItemDescription], [HealValue], [Quantity]) VALUES (@ItemName, @ItemDescription, @HealValue, @Quantity);
SELECT ItemName, ItemDescription, HealValue, Quantity FROM PlayerItemsListInfo WHERE (ItemName = @ItemName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ItemName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ItemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ItemDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ItemDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@HealValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HealValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ItemName, ItemDescription, HealValue, Quantity FROM dbo.PlayerItemsListInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PlayerItemsListInfo] SET [ItemName] = @ItemName, [ItemDescription] = @ItemDescription, [HealValue] = @HealValue, [Quantity] = @Quantity WHERE (([ItemName] = @Original_ItemName) AND ([ItemDescription] = @Original_ItemDescription) AND ([HealValue] = @Original_HealValue) AND ([Quantity] = @Original_Quantity));
SELECT ItemName, ItemDescription, HealValue, Quantity FROM PlayerItemsListInfo WHERE (ItemName = @ItemName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ItemName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ItemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ItemDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ItemDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@HealValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HealValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ItemName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ItemName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ItemDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ItemDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_HealValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HealValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ItemName" DataSetColumn="ItemName" />
              <Mapping SourceColumn="ItemDescription" DataSetColumn="ItemDescription" />
              <Mapping SourceColumn="HealValue" DataSetColumn="HealValue" />
              <Mapping SourceColumn="Quantity" DataSetColumn="Quantity" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteAllTableData" Modifier="Public" Name="DeleteAllTableData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteAllTableData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM PlayerItemsListInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerItemsListInfo" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnQuantity" Modifier="Public" Name="ReturnQuantity" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ReturnQuantity">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Quantity AS Expr1
FROM            PlayerItemsListInfo
WHERE        (ItemName = @itemName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="itemName" ColumnName="ItemName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerItemsListInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@itemName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ItemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SaveItemList" Modifier="Public" Name="SaveItemList" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="SaveItemList">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO PlayerItemsListInfo
                         (ItemName, ItemDescription, HealValue, Quantity)
VALUES        (@ItemName,@ItemDescription,@HealValue,@Quantity);  
SELECT ItemName, ItemDescription, HealValue, Quantity FROM PlayerItemsListInfo WHERE (ItemName = @ItemName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ItemName" ColumnName="ItemName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerItemsListInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@ItemName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ItemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ItemDescription" ColumnName="ItemDescription" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerItemsListInfo" DataTypeServer="nvarchar(255)" DbType="String" Direction="Input" ParameterName="@ItemDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="255" SourceColumn="ItemDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="HealValue" ColumnName="HealValue" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerItemsListInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@HealValue" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="HealValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Quantity" ColumnName="Quantity" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerItemsListInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateItemList" Modifier="Public" Name="UpdateItemList" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="UpdateItemList">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       PlayerItemsListInfo
SET                Quantity = @Quantity
WHERE        (ItemName = @Original_ItemName); 
SELECT ItemName, ItemDescription, HealValue, Quantity FROM PlayerItemsListInfo WHERE (ItemName = @ItemName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Quantity" ColumnName="Quantity" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerItemsListInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ItemName" ColumnName="ItemName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerItemsListInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Original_ItemName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ItemName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ItemName" ColumnName="ItemName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerItemsListInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@ItemName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="ItemName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlayerTreasureListInfoTableAdapter" GeneratorDataComponentClassName="PlayerTreasureListInfoTableAdapter" Name="PlayerTreasureListInfo" UserDataComponentName="PlayerTreasureListInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerTreasureListInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PlayerTreasureListInfo] WHERE (([TreasureName] = @Original_TreasureName) AND ([TreasureDescription] = @Original_TreasureDescription) AND ([TreasureUse] = @Original_TreasureUse) AND ([Quantity] = @Original_Quantity))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TreasureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TreasureDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TreasureUse" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureUse" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PlayerTreasureListInfo] ([TreasureName], [TreasureDescription], [TreasureUse], [Quantity]) VALUES (@TreasureName, @TreasureDescription, @TreasureUse, @Quantity);
SELECT TreasureName, TreasureDescription, TreasureUse, Quantity FROM PlayerTreasureListInfo WHERE (TreasureName = @TreasureName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TreasureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TreasureDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TreasureUse" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureUse" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TreasureName, TreasureDescription, TreasureUse, Quantity FROM dbo.PlayerTreasureListInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PlayerTreasureListInfo] SET [TreasureName] = @TreasureName, [TreasureDescription] = @TreasureDescription, [TreasureUse] = @TreasureUse, [Quantity] = @Quantity WHERE (([TreasureName] = @Original_TreasureName) AND ([TreasureDescription] = @Original_TreasureDescription) AND ([TreasureUse] = @Original_TreasureUse) AND ([Quantity] = @Original_Quantity));
SELECT TreasureName, TreasureDescription, TreasureUse, Quantity FROM PlayerTreasureListInfo WHERE (TreasureName = @TreasureName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TreasureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TreasureDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TreasureUse" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureUse" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TreasureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TreasureDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TreasureUse" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TreasureUse" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TreasureName" DataSetColumn="TreasureName" />
              <Mapping SourceColumn="TreasureDescription" DataSetColumn="TreasureDescription" />
              <Mapping SourceColumn="TreasureUse" DataSetColumn="TreasureUse" />
              <Mapping SourceColumn="Quantity" DataSetColumn="Quantity" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteAllTableData" Modifier="Public" Name="DeleteAllTableData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteAllTableData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM PlayerTreasureListInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.PlayerTreasureListInfo" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnQuantity" Modifier="Public" Name="ReturnQuantity" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ReturnQuantity">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Quantity AS Expr1
FROM            PlayerTreasureListInfo
WHERE        (TreasureName = @TreasureName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="TreasureName" ColumnName="TreasureName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerTreasureListInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@TreasureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="TreasureName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SaveTreasureList" Modifier="Public" Name="SaveTreasureList" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="SaveTreasureList">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[PlayerTreasureListInfo] ([TreasureName], [TreasureDescription], [TreasureUse], [Quantity]) VALUES (@TreasureName, @TreasureDescription, @TreasureUse, @Quantity);
SELECT TreasureName, TreasureDescription, TreasureUse, Quantity FROM PlayerTreasureListInfo WHERE (TreasureName = @TreasureName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="TreasureName" ColumnName="TreasureName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerTreasureListInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@TreasureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="TreasureName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TreasureDescription" ColumnName="TreasureDescription" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerTreasureListInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@TreasureDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="TreasureDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TreasureUse" ColumnName="TreasureUse" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerTreasureListInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@TreasureUse" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="TreasureUse" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Quantity" ColumnName="Quantity" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerTreasureListInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateTreasureList" Modifier="Public" Name="UpdateTreasureList" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="UpdateTreasureList">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       PlayerTreasureListInfo
SET                Quantity = @Quantity
WHERE        (TreasureName = @Original_TreasureName); 
SELECT TreasureName, TreasureDescription, TreasureUse, Quantity FROM PlayerTreasureListInfo WHERE (TreasureName = @TreasureName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Quantity" ColumnName="Quantity" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerTreasureListInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_TreasureName" ColumnName="TreasureName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerTreasureListInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Original_TreasureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="TreasureName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TreasureName" ColumnName="TreasureName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.PlayerTreasureListInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@TreasureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="TreasureName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RoomInfoTableAdapter" GeneratorDataComponentClassName="RoomInfoTableAdapter" Name="RoomInfo" UserDataComponentName="RoomInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.RoomInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RoomInfo] WHERE (([RoomName] = @Original_RoomName) AND ([RoomIndex] = @Original_RoomIndex))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RoomInfo] ([RoomName], [RoomIndex]) VALUES (@RoomName, @RoomIndex);
SELECT RoomName, RoomIndex FROM RoomInfo WHERE (RoomName = @RoomName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoomIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RoomName, RoomIndex FROM dbo.RoomInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RoomInfo] SET [RoomName] = @RoomName, [RoomIndex] = @RoomIndex WHERE (([RoomName] = @Original_RoomName) AND ([RoomIndex] = @Original_RoomIndex));
SELECT RoomName, RoomIndex FROM RoomInfo WHERE (RoomName = @RoomName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoomIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoomName" DataSetColumn="RoomName" />
              <Mapping SourceColumn="RoomIndex" DataSetColumn="RoomIndex" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteAllTableData" Modifier="Public" Name="DeleteAllTableData" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteAllTableData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM RoomInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.RoomInfo" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnIndex" Modifier="Public" Name="ReturnIndex" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ReturnIndex">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        RoomIndex AS Expr1
FROM            RoomInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.RoomInfo" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnRoom" Modifier="Public" Name="ReturnRoom" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="ReturnRoom">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        RoomName AS Expr1
FROM            RoomInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.RoomInfo" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnRoomIndex" Modifier="Public" Name="ReturnRoomIndex" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="ReturnRoomIndex">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        RoomIndex AS Expr1
FROM            RoomInfo
WHERE        (RoomName = @RoomName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoomName" ColumnName="RoomName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.RoomInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="dbo.RoomInfo" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="ReturnRoomName" Modifier="Public" Name="ReturnRoomName" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="ReturnRoomName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        RoomName AS Expr1
FROM            RoomInfo
WHERE        (RoomName = @RoomName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoomName" ColumnName="RoomName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.RoomInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Expr1" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SaveRoomInfo" Modifier="Public" Name="SaveRoomInfo" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="SaveRoomInfo">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO RoomInfo
                         (RoomName, RoomIndex)
VALUES        (@RoomName,@RoomIndex); 
SELECT RoomName, RoomIndex FROM RoomInfo WHERE (RoomName = @RoomName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoomName" ColumnName="RoomName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.RoomInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RoomIndex" ColumnName="RoomIndex" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.RoomInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoomIndex" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoomIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="PlayerSaveInformationConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateRoomInfo" Modifier="Public" Name="UpdateRoomInfo" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy6" UserSourceName="UpdateRoomInfo">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       RoomInfo
SET                RoomName = @RoomName, RoomIndex = @RoomIndex
WHERE        (RoomName = @Original_RoomName);  
SELECT RoomName, RoomIndex FROM RoomInfo WHERE (RoomName = @RoomName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoomName" ColumnName="RoomName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.RoomInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RoomIndex" ColumnName="RoomIndex" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.RoomInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoomIndex" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoomIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_RoomName" ColumnName="RoomName" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\DUNGEON CRAWLER\DUNGEONCRAWL\DUNGEONCRAWL\PLAYERSAVEINFORMATION.MDF].dbo.RoomInfo" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Original_RoomName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="RoomName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PlayerInfoDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="PlayerInfoDataSet" msprop:Generator_UserDSName="PlayerInfoDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="PlayerInformation" msprop:Generator_TableClassName="PlayerInformationDataTable" msprop:Generator_TableVarName="tablePlayerInformation" msprop:Generator_RowChangedName="PlayerInformationRowChanged" msprop:Generator_TablePropName="PlayerInformation" msprop:Generator_RowDeletingName="PlayerInformationRowDeleting" msprop:Generator_RowChangingName="PlayerInformationRowChanging" msprop:Generator_RowEvHandlerName="PlayerInformationRowChangeEventHandler" msprop:Generator_RowDeletedName="PlayerInformationRowDeleted" msprop:Generator_RowClassName="PlayerInformationRow" msprop:Generator_UserTableName="PlayerInformation" msprop:Generator_RowEvArgName="PlayerInformationRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PlayerName" msprop:Generator_ColumnVarNameInTable="columnPlayerName" msprop:Generator_ColumnPropNameInRow="PlayerName" msprop:Generator_ColumnPropNameInTable="PlayerNameColumn" msprop:Generator_UserColumnName="PlayerName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BattlerPassword" msprop:Generator_ColumnVarNameInTable="columnBattlerPassword" msprop:Generator_ColumnPropNameInRow="BattlerPassword" msprop:Generator_ColumnPropNameInTable="BattlerPasswordColumn" msprop:Generator_UserColumnName="BattlerPassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BattlerMaxHP" msprop:Generator_ColumnVarNameInTable="columnBattlerMaxHP" msprop:Generator_ColumnPropNameInRow="BattlerMaxHP" msprop:Generator_ColumnPropNameInTable="BattlerMaxHPColumn" msprop:Generator_UserColumnName="BattlerMaxHP" type="xs:int" />
              <xs:element name="BattlerCurrentHP" msprop:Generator_ColumnVarNameInTable="columnBattlerCurrentHP" msprop:Generator_ColumnPropNameInRow="BattlerCurrentHP" msprop:Generator_ColumnPropNameInTable="BattlerCurrentHPColumn" msprop:Generator_UserColumnName="BattlerCurrentHP" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PlayerWeaponInformation" msprop:Generator_TableClassName="PlayerWeaponInformationDataTable" msprop:Generator_TableVarName="tablePlayerWeaponInformation" msprop:Generator_RowChangedName="PlayerWeaponInformationRowChanged" msprop:Generator_TablePropName="PlayerWeaponInformation" msprop:Generator_RowDeletingName="PlayerWeaponInformationRowDeleting" msprop:Generator_RowChangingName="PlayerWeaponInformationRowChanging" msprop:Generator_RowEvHandlerName="PlayerWeaponInformationRowChangeEventHandler" msprop:Generator_RowDeletedName="PlayerWeaponInformationRowDeleted" msprop:Generator_RowClassName="PlayerWeaponInformationRow" msprop:Generator_UserTableName="PlayerWeaponInformation" msprop:Generator_RowEvArgName="PlayerWeaponInformationRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="WeaponName" msprop:Generator_ColumnVarNameInTable="columnWeaponName" msprop:Generator_ColumnPropNameInRow="WeaponName" msprop:Generator_ColumnPropNameInTable="WeaponNameColumn" msprop:Generator_UserColumnName="WeaponName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="WeaponDamage" msprop:Generator_ColumnVarNameInTable="columnWeaponDamage" msprop:Generator_ColumnPropNameInRow="WeaponDamage" msprop:Generator_ColumnPropNameInTable="WeaponDamageColumn" msprop:Generator_UserColumnName="WeaponDamage" type="xs:int" />
              <xs:element name="WeaponDescription" msprop:Generator_ColumnVarNameInTable="columnWeaponDescription" msprop:Generator_ColumnPropNameInRow="WeaponDescription" msprop:Generator_ColumnPropNameInTable="WeaponDescriptionColumn" msprop:Generator_UserColumnName="WeaponDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PlayerItemsListInfo" msprop:Generator_TableClassName="PlayerItemsListInfoDataTable" msprop:Generator_TableVarName="tablePlayerItemsListInfo" msprop:Generator_RowChangedName="PlayerItemsListInfoRowChanged" msprop:Generator_TablePropName="PlayerItemsListInfo" msprop:Generator_RowDeletingName="PlayerItemsListInfoRowDeleting" msprop:Generator_RowChangingName="PlayerItemsListInfoRowChanging" msprop:Generator_RowEvHandlerName="PlayerItemsListInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="PlayerItemsListInfoRowDeleted" msprop:Generator_RowClassName="PlayerItemsListInfoRow" msprop:Generator_UserTableName="PlayerItemsListInfo" msprop:Generator_RowEvArgName="PlayerItemsListInfoRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ItemName" msprop:Generator_ColumnVarNameInTable="columnItemName" msprop:Generator_ColumnPropNameInRow="ItemName" msprop:Generator_ColumnPropNameInTable="ItemNameColumn" msprop:Generator_UserColumnName="ItemName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ItemDescription" msprop:Generator_ColumnVarNameInTable="columnItemDescription" msprop:Generator_ColumnPropNameInRow="ItemDescription" msprop:Generator_ColumnPropNameInTable="ItemDescriptionColumn" msprop:Generator_UserColumnName="ItemDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="HealValue" msprop:Generator_ColumnVarNameInTable="columnHealValue" msprop:Generator_ColumnPropNameInRow="HealValue" msprop:Generator_ColumnPropNameInTable="HealValueColumn" msprop:Generator_UserColumnName="HealValue" type="xs:int" />
              <xs:element name="Quantity" msprop:Generator_ColumnVarNameInTable="columnQuantity" msprop:Generator_ColumnPropNameInRow="Quantity" msprop:Generator_ColumnPropNameInTable="QuantityColumn" msprop:Generator_UserColumnName="Quantity" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PlayerTreasureListInfo" msprop:Generator_TableClassName="PlayerTreasureListInfoDataTable" msprop:Generator_TableVarName="tablePlayerTreasureListInfo" msprop:Generator_RowChangedName="PlayerTreasureListInfoRowChanged" msprop:Generator_TablePropName="PlayerTreasureListInfo" msprop:Generator_RowDeletingName="PlayerTreasureListInfoRowDeleting" msprop:Generator_RowChangingName="PlayerTreasureListInfoRowChanging" msprop:Generator_RowEvHandlerName="PlayerTreasureListInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="PlayerTreasureListInfoRowDeleted" msprop:Generator_RowClassName="PlayerTreasureListInfoRow" msprop:Generator_UserTableName="PlayerTreasureListInfo" msprop:Generator_RowEvArgName="PlayerTreasureListInfoRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TreasureName" msprop:Generator_ColumnVarNameInTable="columnTreasureName" msprop:Generator_ColumnPropNameInRow="TreasureName" msprop:Generator_ColumnPropNameInTable="TreasureNameColumn" msprop:Generator_UserColumnName="TreasureName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TreasureDescription" msprop:Generator_ColumnVarNameInTable="columnTreasureDescription" msprop:Generator_ColumnPropNameInRow="TreasureDescription" msprop:Generator_ColumnPropNameInTable="TreasureDescriptionColumn" msprop:Generator_UserColumnName="TreasureDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TreasureUse" msprop:Generator_ColumnVarNameInTable="columnTreasureUse" msprop:Generator_ColumnPropNameInRow="TreasureUse" msprop:Generator_ColumnPropNameInTable="TreasureUseColumn" msprop:Generator_UserColumnName="TreasureUse">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Quantity" msprop:Generator_ColumnVarNameInTable="columnQuantity" msprop:Generator_ColumnPropNameInRow="Quantity" msprop:Generator_ColumnPropNameInTable="QuantityColumn" msprop:Generator_UserColumnName="Quantity" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RoomInfo" msprop:Generator_TableClassName="RoomInfoDataTable" msprop:Generator_TableVarName="tableRoomInfo" msprop:Generator_RowChangedName="RoomInfoRowChanged" msprop:Generator_TablePropName="RoomInfo" msprop:Generator_RowDeletingName="RoomInfoRowDeleting" msprop:Generator_RowChangingName="RoomInfoRowChanging" msprop:Generator_RowEvHandlerName="RoomInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="RoomInfoRowDeleted" msprop:Generator_RowClassName="RoomInfoRow" msprop:Generator_UserTableName="RoomInfo" msprop:Generator_RowEvArgName="RoomInfoRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoomName" msprop:Generator_ColumnVarNameInTable="columnRoomName" msprop:Generator_ColumnPropNameInRow="RoomName" msprop:Generator_ColumnPropNameInTable="RoomNameColumn" msprop:Generator_UserColumnName="RoomName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RoomIndex" msprop:Generator_ColumnVarNameInTable="columnRoomIndex" msprop:Generator_ColumnPropNameInRow="RoomIndex" msprop:Generator_ColumnPropNameInTable="RoomIndexColumn" msprop:Generator_UserColumnName="RoomIndex" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PlayerInformation" />
      <xs:field xpath="mstns:PlayerName" />
    </xs:unique>
    <xs:unique name="PlayerWeaponInformation_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PlayerWeaponInformation" />
      <xs:field xpath="mstns:WeaponName" />
    </xs:unique>
    <xs:unique name="PlayerItemsListInfo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PlayerItemsListInfo" />
      <xs:field xpath="mstns:ItemName" />
    </xs:unique>
    <xs:unique name="PlayerTreasureListInfo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PlayerTreasureListInfo" />
      <xs:field xpath="mstns:TreasureName" />
    </xs:unique>
    <xs:unique name="RoomInfo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RoomInfo" />
      <xs:field xpath="mstns:RoomName" />
    </xs:unique>
  </xs:element>
</xs:schema>