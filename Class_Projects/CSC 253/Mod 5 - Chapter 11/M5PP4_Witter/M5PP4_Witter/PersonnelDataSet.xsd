<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PersonnelDataSet" targetNamespace="http://tempuri.org/PersonnelDataSet.xsd" xmlns:mstns="http://tempuri.org/PersonnelDataSet.xsd" xmlns="http://tempuri.org/PersonnelDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PersonnelConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PersonnelConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.M5PP4_Witter.Properties.Settings.GlobalReference.Default.PersonnelConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeeTableAdapter" GeneratorDataComponentClassName="EmployeeTableAdapter" Name="Employee" UserDataComponentName="EmployeeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PersonnelConnectionString (Settings)" DbObjectName="dbo.Employee" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Employee] WHERE (([employeeID] = @Original_employeeID) AND ([name] = @Original_name) AND ([position] = @Original_position) AND ([HourlyPayRate] = @Original_HourlyPayRate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_employeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="employeeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="position" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_HourlyPayRate" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="HourlyPayRate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Employee] ([name], [position], [HourlyPayRate]) VALUES (@name, @position, @HourlyPayRate);
SELECT employeeID, name, position, HourlyPayRate FROM Employee WHERE (employeeID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="position" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@HourlyPayRate" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="HourlyPayRate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT employeeID, name, position, HourlyPayRate FROM dbo.Employee</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Employee] SET [name] = @name, [position] = @position, [HourlyPayRate] = @HourlyPayRate WHERE (([employeeID] = @Original_employeeID) AND ([name] = @Original_name) AND ([position] = @Original_position) AND ([HourlyPayRate] = @Original_HourlyPayRate));
SELECT employeeID, name, position, HourlyPayRate FROM Employee WHERE (employeeID = @employeeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="position" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@HourlyPayRate" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="HourlyPayRate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_employeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="employeeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_position" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="position" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_HourlyPayRate" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="HourlyPayRate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="employeeID" ColumnName="employeeID" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\MOD 5 - CHAPTER 11\M5PP4_WITTER\M5PP4_WITTER\PERSONNEL.MDF].dbo.Employee" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@employeeID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="employeeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="employeeID" DataSetColumn="employeeID" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="position" DataSetColumn="position" />
              <Mapping SourceColumn="HourlyPayRate" DataSetColumn="HourlyPayRate" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="PersonnelConnectionString (Settings)" DbObjectName="dbo.Employee" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="SearchEmployeeName" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="SearchEmployeeName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="SearchEmployeeName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        employeeID, name, position, HourlyPayRate
FROM            Employee
WHERE        (name LIKE '%' + @value + '%')</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="name" DataSourceName="[E:\FALL CLASSES 2017\CSC 253 - ADVANCED C# PROGRAMMING\MOD 5 - CHAPTER 11\M5PP4_WITTER\M5PP4_WITTER\PERSONNEL.MDF].dbo.Employee" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@value" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PersonnelDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="PersonnelDataSet" msprop:Generator_UserDSName="PersonnelDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Employee" msprop:Generator_TableClassName="EmployeeDataTable" msprop:Generator_TableVarName="tableEmployee" msprop:Generator_RowChangedName="EmployeeRowChanged" msprop:Generator_TablePropName="Employee" msprop:Generator_RowDeletingName="EmployeeRowDeleting" msprop:Generator_RowChangingName="EmployeeRowChanging" msprop:Generator_RowEvHandlerName="EmployeeRowChangeEventHandler" msprop:Generator_RowDeletedName="EmployeeRowDeleted" msprop:Generator_RowClassName="EmployeeRow" msprop:Generator_UserTableName="Employee" msprop:Generator_RowEvArgName="EmployeeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="employeeID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnemployeeID" msprop:Generator_ColumnPropNameInRow="employeeID" msprop:Generator_ColumnPropNameInTable="employeeIDColumn" msprop:Generator_UserColumnName="employeeID" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="position" msprop:Generator_ColumnVarNameInTable="columnposition" msprop:Generator_ColumnPropNameInRow="position" msprop:Generator_ColumnPropNameInTable="positionColumn" msprop:Generator_UserColumnName="position">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="HourlyPayRate" msprop:Generator_ColumnVarNameInTable="columnHourlyPayRate" msprop:Generator_ColumnPropNameInRow="HourlyPayRate" msprop:Generator_ColumnPropNameInTable="HourlyPayRateColumn" msprop:Generator_UserColumnName="HourlyPayRate" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Employee" />
      <xs:field xpath="mstns:employeeID" />
    </xs:unique>
  </xs:element>
</xs:schema>